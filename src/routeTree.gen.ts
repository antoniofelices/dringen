/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthUserIdRouteImport } from './routes/_auth/user/$id'
import { Route as AuthHealthConsumerIdRouteImport } from './routes/_auth/health-consumer/$id'

const SignUpLazyRouteImport = createFileRoute('/sign-up')()
const SignInLazyRouteImport = createFileRoute('/sign-in')()
const IndexLazyRouteImport = createFileRoute('/')()
const AuthUserListLazyRouteImport = createFileRoute('/_auth/user/list')()
const AuthHealthConsumerListLazyRouteImport = createFileRoute(
  '/_auth/health-consumer/list',
)()

const SignUpLazyRoute = SignUpLazyRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))
const SignInLazyRoute = SignInLazyRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sign-in.lazy').then((d) => d.Route))
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const AuthUserListLazyRoute = AuthUserListLazyRouteImport.update({
  id: '/user/list',
  path: '/user/list',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/user/list.lazy').then((d) => d.Route),
)
const AuthHealthConsumerListLazyRoute =
  AuthHealthConsumerListLazyRouteImport.update({
    id: '/health-consumer/list',
    path: '/health-consumer/list',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/_auth/health-consumer/list.lazy').then((d) => d.Route),
  )
const AuthUserIdRoute = AuthUserIdRouteImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => AuthRoute,
} as any)
const AuthHealthConsumerIdRoute = AuthHealthConsumerIdRouteImport.update({
  id: '/health-consumer/$id',
  path: '/health-consumer/$id',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/health-consumer/$id': typeof AuthHealthConsumerIdRoute
  '/user/$id': typeof AuthUserIdRoute
  '/health-consumer/list': typeof AuthHealthConsumerListLazyRoute
  '/user/list': typeof AuthUserListLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/health-consumer/$id': typeof AuthHealthConsumerIdRoute
  '/user/$id': typeof AuthUserIdRoute
  '/health-consumer/list': typeof AuthHealthConsumerListLazyRoute
  '/user/list': typeof AuthUserListLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/_auth/health-consumer/$id': typeof AuthHealthConsumerIdRoute
  '/_auth/user/$id': typeof AuthUserIdRoute
  '/_auth/health-consumer/list': typeof AuthHealthConsumerListLazyRoute
  '/_auth/user/list': typeof AuthUserListLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/health-consumer/$id'
    | '/user/$id'
    | '/health-consumer/list'
    | '/user/list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/health-consumer/$id'
    | '/user/$id'
    | '/health-consumer/list'
    | '/user/list'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/sign-in'
    | '/sign-up'
    | '/_auth/health-consumer/$id'
    | '/_auth/user/$id'
    | '/_auth/health-consumer/list'
    | '/_auth/user/list'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  SignInLazyRoute: typeof SignInLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/user/list': {
      id: '/_auth/user/list'
      path: '/user/list'
      fullPath: '/user/list'
      preLoaderRoute: typeof AuthUserListLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/health-consumer/list': {
      id: '/_auth/health-consumer/list'
      path: '/health-consumer/list'
      fullPath: '/health-consumer/list'
      preLoaderRoute: typeof AuthHealthConsumerListLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user/$id': {
      id: '/_auth/user/$id'
      path: '/user/$id'
      fullPath: '/user/$id'
      preLoaderRoute: typeof AuthUserIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/health-consumer/$id': {
      id: '/_auth/health-consumer/$id'
      path: '/health-consumer/$id'
      fullPath: '/health-consumer/$id'
      preLoaderRoute: typeof AuthHealthConsumerIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthHealthConsumerIdRoute: typeof AuthHealthConsumerIdRoute
  AuthUserIdRoute: typeof AuthUserIdRoute
  AuthHealthConsumerListLazyRoute: typeof AuthHealthConsumerListLazyRoute
  AuthUserListLazyRoute: typeof AuthUserListLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthHealthConsumerIdRoute: AuthHealthConsumerIdRoute,
  AuthUserIdRoute: AuthUserIdRoute,
  AuthHealthConsumerListLazyRoute: AuthHealthConsumerListLazyRoute,
  AuthUserListLazyRoute: AuthUserListLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  SignInLazyRoute: SignInLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
