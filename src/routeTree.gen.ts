/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthzRouteImport } from './routes/_authz'
import { Route as AuthnRouteImport } from './routes/_authn'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthzUserIdRouteImport } from './routes/_authz/user/$id'
import { Route as AuthzPatientIdRouteImport } from './routes/_authz/patient/$id'

const AuthzSettingsLazyRouteImport = createFileRoute('/_authz/settings')()
const AuthzDashboardLazyRouteImport = createFileRoute('/_authz/dashboard')()
const AuthnSignUpLazyRouteImport = createFileRoute('/_authn/sign-up')()
const AuthnSignInLazyRouteImport = createFileRoute('/_authn/sign-in')()
const AuthnCheckEmailLazyRouteImport = createFileRoute('/_authn/check-email')()
const AuthzUserStadisticsLazyRouteImport = createFileRoute(
  '/_authz/user/stadistics',
)()
const AuthzUserListLazyRouteImport = createFileRoute('/_authz/user/list')()
const AuthzUserAddLazyRouteImport = createFileRoute('/_authz/user/add')()
const AuthzPatientStadisticsLazyRouteImport = createFileRoute(
  '/_authz/patient/stadistics',
)()
const AuthzPatientListLazyRouteImport = createFileRoute(
  '/_authz/patient/list',
)()
const AuthzPatientAddLazyRouteImport = createFileRoute('/_authz/patient/add')()

const AuthzRoute = AuthzRouteImport.update({
  id: '/_authz',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthnRoute = AuthnRouteImport.update({
  id: '/_authn',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthzSettingsLazyRoute = AuthzSettingsLazyRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/settings.lazy').then((d) => d.Route),
)
const AuthzDashboardLazyRoute = AuthzDashboardLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/dashboard.lazy').then((d) => d.Route),
)
const AuthnSignUpLazyRoute = AuthnSignUpLazyRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/sign-up.lazy').then((d) => d.Route),
)
const AuthnSignInLazyRoute = AuthnSignInLazyRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/sign-in.lazy').then((d) => d.Route),
)
const AuthnCheckEmailLazyRoute = AuthnCheckEmailLazyRouteImport.update({
  id: '/check-email',
  path: '/check-email',
  getParentRoute: () => AuthnRoute,
} as any).lazy(() =>
  import('./routes/_authn/check-email.lazy').then((d) => d.Route),
)
const AuthzUserStadisticsLazyRoute = AuthzUserStadisticsLazyRouteImport.update({
  id: '/user/stadistics',
  path: '/user/stadistics',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/user/stadistics.lazy').then((d) => d.Route),
)
const AuthzUserListLazyRoute = AuthzUserListLazyRouteImport.update({
  id: '/user/list',
  path: '/user/list',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/user/list.lazy').then((d) => d.Route),
)
const AuthzUserAddLazyRoute = AuthzUserAddLazyRouteImport.update({
  id: '/user/add',
  path: '/user/add',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/user/add.lazy').then((d) => d.Route),
)
const AuthzPatientStadisticsLazyRoute =
  AuthzPatientStadisticsLazyRouteImport.update({
    id: '/patient/stadistics',
    path: '/patient/stadistics',
    getParentRoute: () => AuthzRoute,
  } as any).lazy(() =>
    import('./routes/_authz/patient/stadistics.lazy').then((d) => d.Route),
  )
const AuthzPatientListLazyRoute = AuthzPatientListLazyRouteImport.update({
  id: '/patient/list',
  path: '/patient/list',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/patient/list.lazy').then((d) => d.Route),
)
const AuthzPatientAddLazyRoute = AuthzPatientAddLazyRouteImport.update({
  id: '/patient/add',
  path: '/patient/add',
  getParentRoute: () => AuthzRoute,
} as any).lazy(() =>
  import('./routes/_authz/patient/add.lazy').then((d) => d.Route),
)
const AuthzUserIdRoute = AuthzUserIdRouteImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => AuthzRoute,
} as any)
const AuthzPatientIdRoute = AuthzPatientIdRouteImport.update({
  id: '/patient/$id',
  path: '/patient/$id',
  getParentRoute: () => AuthzRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/check-email': typeof AuthnCheckEmailLazyRoute
  '/sign-in': typeof AuthnSignInLazyRoute
  '/sign-up': typeof AuthnSignUpLazyRoute
  '/dashboard': typeof AuthzDashboardLazyRoute
  '/settings': typeof AuthzSettingsLazyRoute
  '/patient/$id': typeof AuthzPatientIdRoute
  '/user/$id': typeof AuthzUserIdRoute
  '/patient/add': typeof AuthzPatientAddLazyRoute
  '/patient/list': typeof AuthzPatientListLazyRoute
  '/patient/stadistics': typeof AuthzPatientStadisticsLazyRoute
  '/user/add': typeof AuthzUserAddLazyRoute
  '/user/list': typeof AuthzUserListLazyRoute
  '/user/stadistics': typeof AuthzUserStadisticsLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/check-email': typeof AuthnCheckEmailLazyRoute
  '/sign-in': typeof AuthnSignInLazyRoute
  '/sign-up': typeof AuthnSignUpLazyRoute
  '/dashboard': typeof AuthzDashboardLazyRoute
  '/settings': typeof AuthzSettingsLazyRoute
  '/patient/$id': typeof AuthzPatientIdRoute
  '/user/$id': typeof AuthzUserIdRoute
  '/patient/add': typeof AuthzPatientAddLazyRoute
  '/patient/list': typeof AuthzPatientListLazyRoute
  '/patient/stadistics': typeof AuthzPatientStadisticsLazyRoute
  '/user/add': typeof AuthzUserAddLazyRoute
  '/user/list': typeof AuthzUserListLazyRoute
  '/user/stadistics': typeof AuthzUserStadisticsLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authn': typeof AuthnRouteWithChildren
  '/_authz': typeof AuthzRouteWithChildren
  '/_authn/check-email': typeof AuthnCheckEmailLazyRoute
  '/_authn/sign-in': typeof AuthnSignInLazyRoute
  '/_authn/sign-up': typeof AuthnSignUpLazyRoute
  '/_authz/dashboard': typeof AuthzDashboardLazyRoute
  '/_authz/settings': typeof AuthzSettingsLazyRoute
  '/_authz/patient/$id': typeof AuthzPatientIdRoute
  '/_authz/user/$id': typeof AuthzUserIdRoute
  '/_authz/patient/add': typeof AuthzPatientAddLazyRoute
  '/_authz/patient/list': typeof AuthzPatientListLazyRoute
  '/_authz/patient/stadistics': typeof AuthzPatientStadisticsLazyRoute
  '/_authz/user/add': typeof AuthzUserAddLazyRoute
  '/_authz/user/list': typeof AuthzUserListLazyRoute
  '/_authz/user/stadistics': typeof AuthzUserStadisticsLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/check-email'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/settings'
    | '/patient/$id'
    | '/user/$id'
    | '/patient/add'
    | '/patient/list'
    | '/patient/stadistics'
    | '/user/add'
    | '/user/list'
    | '/user/stadistics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/check-email'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/settings'
    | '/patient/$id'
    | '/user/$id'
    | '/patient/add'
    | '/patient/list'
    | '/patient/stadistics'
    | '/user/add'
    | '/user/list'
    | '/user/stadistics'
  id:
    | '__root__'
    | '/'
    | '/_authn'
    | '/_authz'
    | '/_authn/check-email'
    | '/_authn/sign-in'
    | '/_authn/sign-up'
    | '/_authz/dashboard'
    | '/_authz/settings'
    | '/_authz/patient/$id'
    | '/_authz/user/$id'
    | '/_authz/patient/add'
    | '/_authz/patient/list'
    | '/_authz/patient/stadistics'
    | '/_authz/user/add'
    | '/_authz/user/list'
    | '/_authz/user/stadistics'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthnRoute: typeof AuthnRouteWithChildren
  AuthzRoute: typeof AuthzRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authz': {
      id: '/_authz'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthzRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authn': {
      id: '/_authn'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authz/settings': {
      id: '/_authz/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthzSettingsLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/dashboard': {
      id: '/_authz/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthzDashboardLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authn/sign-up': {
      id: '/_authn/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthnSignUpLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authn/sign-in': {
      id: '/_authn/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthnSignInLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authn/check-email': {
      id: '/_authn/check-email'
      path: '/check-email'
      fullPath: '/check-email'
      preLoaderRoute: typeof AuthnCheckEmailLazyRouteImport
      parentRoute: typeof AuthnRoute
    }
    '/_authz/user/stadistics': {
      id: '/_authz/user/stadistics'
      path: '/user/stadistics'
      fullPath: '/user/stadistics'
      preLoaderRoute: typeof AuthzUserStadisticsLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/user/list': {
      id: '/_authz/user/list'
      path: '/user/list'
      fullPath: '/user/list'
      preLoaderRoute: typeof AuthzUserListLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/user/add': {
      id: '/_authz/user/add'
      path: '/user/add'
      fullPath: '/user/add'
      preLoaderRoute: typeof AuthzUserAddLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/patient/stadistics': {
      id: '/_authz/patient/stadistics'
      path: '/patient/stadistics'
      fullPath: '/patient/stadistics'
      preLoaderRoute: typeof AuthzPatientStadisticsLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/patient/list': {
      id: '/_authz/patient/list'
      path: '/patient/list'
      fullPath: '/patient/list'
      preLoaderRoute: typeof AuthzPatientListLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/patient/add': {
      id: '/_authz/patient/add'
      path: '/patient/add'
      fullPath: '/patient/add'
      preLoaderRoute: typeof AuthzPatientAddLazyRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/user/$id': {
      id: '/_authz/user/$id'
      path: '/user/$id'
      fullPath: '/user/$id'
      preLoaderRoute: typeof AuthzUserIdRouteImport
      parentRoute: typeof AuthzRoute
    }
    '/_authz/patient/$id': {
      id: '/_authz/patient/$id'
      path: '/patient/$id'
      fullPath: '/patient/$id'
      preLoaderRoute: typeof AuthzPatientIdRouteImport
      parentRoute: typeof AuthzRoute
    }
  }
}

interface AuthnRouteChildren {
  AuthnCheckEmailLazyRoute: typeof AuthnCheckEmailLazyRoute
  AuthnSignInLazyRoute: typeof AuthnSignInLazyRoute
  AuthnSignUpLazyRoute: typeof AuthnSignUpLazyRoute
}

const AuthnRouteChildren: AuthnRouteChildren = {
  AuthnCheckEmailLazyRoute: AuthnCheckEmailLazyRoute,
  AuthnSignInLazyRoute: AuthnSignInLazyRoute,
  AuthnSignUpLazyRoute: AuthnSignUpLazyRoute,
}

const AuthnRouteWithChildren = AuthnRoute._addFileChildren(AuthnRouteChildren)

interface AuthzRouteChildren {
  AuthzDashboardLazyRoute: typeof AuthzDashboardLazyRoute
  AuthzSettingsLazyRoute: typeof AuthzSettingsLazyRoute
  AuthzPatientIdRoute: typeof AuthzPatientIdRoute
  AuthzUserIdRoute: typeof AuthzUserIdRoute
  AuthzPatientAddLazyRoute: typeof AuthzPatientAddLazyRoute
  AuthzPatientListLazyRoute: typeof AuthzPatientListLazyRoute
  AuthzPatientStadisticsLazyRoute: typeof AuthzPatientStadisticsLazyRoute
  AuthzUserAddLazyRoute: typeof AuthzUserAddLazyRoute
  AuthzUserListLazyRoute: typeof AuthzUserListLazyRoute
  AuthzUserStadisticsLazyRoute: typeof AuthzUserStadisticsLazyRoute
}

const AuthzRouteChildren: AuthzRouteChildren = {
  AuthzDashboardLazyRoute: AuthzDashboardLazyRoute,
  AuthzSettingsLazyRoute: AuthzSettingsLazyRoute,
  AuthzPatientIdRoute: AuthzPatientIdRoute,
  AuthzUserIdRoute: AuthzUserIdRoute,
  AuthzPatientAddLazyRoute: AuthzPatientAddLazyRoute,
  AuthzPatientListLazyRoute: AuthzPatientListLazyRoute,
  AuthzPatientStadisticsLazyRoute: AuthzPatientStadisticsLazyRoute,
  AuthzUserAddLazyRoute: AuthzUserAddLazyRoute,
  AuthzUserListLazyRoute: AuthzUserListLazyRoute,
  AuthzUserStadisticsLazyRoute: AuthzUserStadisticsLazyRoute,
}

const AuthzRouteWithChildren = AuthzRoute._addFileChildren(AuthzRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthnRoute: AuthnRouteWithChildren,
  AuthzRoute: AuthzRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
